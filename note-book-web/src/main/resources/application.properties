
# 指定使用哪个配置文件
# spring.profiles.active=local

# embedded server configuration
server.port=8080
# Path of the main dispatcher servlet
server.servlet.path=/
# Context path of the application
server.servlet.context-path=/notebook
server.tomcat.uri-encoding=utf-8

# server.address=
# 默认值为 /**
spring.mvc.static-path-pattern=/static/**
# 默认值为 classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
spring.resources.static-locations=classpath:/templates/,classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/

# 是否允许重新启动
spring.devtools.restart.enabled=true
# 重新启动资源过滤
spring.devtools.restart.exclude=static/**,public/**


# HTTP encoding (HttpEncodingProperties)
spring.http.encoding.charset=utf-8
spring.http.encoding.enabled=true


# datasource primary
spring.datasource.primary.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.primary.jdbc-url=jdbc:mysql://localhost:3306/notebook?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&serverTimezone=UTC&nullCatalogMeansCurrent=true&allowPublicKeyRetrieval=true
spring.datasource.primary.username=root
spring.datasource.primary.password=Mysql%^&890_mysql

# datasource secondary
spring.datasource.secondary.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.secondary.jdbc-url=jdbc:mysql://localhost:3306/notebook_test?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&serverTimezone=UTC&nullCatalogMeansCurrent=true&allowPublicKeyRetrieval=true
spring.datasource.secondary.username=root
spring.datasource.secondary.password=Mysql%^&890_mysql

# spring data jpa
spring.jpa.database=mysql
# Name of the target database to operate on, auto-detected by default. Can be alternatively set using.
# 创建表结构的引擎，默认为 engine=MyISAM
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
# jpa可以直接根据entity创建表
spring.jpa.hibernate.ddl-auto=update
spring.data.jpa.repositories.enabled=true

#logging
logging.file=./logs/notebook.log
logging.file.max-history=0
logging.file.max-size=10MB
# logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){green}
# logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS
# logging.pattern.file=./logs/notebook_p.log
# logging.pattern.level=debug
logging.level.root=WARN
logging.level.com.example.notebook=debug
logging.level.org.springframework.web=debug
logging.level.org.hibernate.sql=debug
logging.level.org.hibernate.type.descriptor=trace

# JACKSON (JacksonProperties)
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=UTC


# THYMELEAF (ThymeleafAutoConfiguration)
# 开启模板缓存（默认值：true）
spring.thymeleaf.cache=false
# 检查模版是否存在（默认值：true）
spring.thymeleaf.check-template=true
# 检查模板位置是否正确（默认值:true)
spring.thymeleaf.check-template-location=true
# 开启MVC Thymeleaf视图解析（默认值：true）
spring.thymeleaf.enabled=true
# Enable the SpringEL compiler in SpringEL expressions.
# spring.thymeleaf.enable-spring-el-compiler=false
# 模版编码
spring.thymeleaf.encoding=UTF-8
# 要被排除在解析之外的视图名称列表，用逗号分隔
spring.thymeleaf.excluded-view-names=
# 要运用于模板之上的模板模式。另见StandardTemplate-ModeHandlers(默认值：HTML5)
spring.thymeleaf.mode=HTML5
# 在构建URL时添加到视图名称前的前缀（默认值：classpath:/templates/）
spring.thymeleaf.prefix=classpath:/templates/
# 未知
# spring.thymeleaf.reactive.chunked-mode-view-names=
# Comma-separated list of view names (patterns allowed) that should be executed in FULL mode even if a max chunk size is set.
# spring.thymeleaf.reactive.full-mode-view-names=
# Maximum size of data buffers used for writing to the response, in bytes.
# spring.thymeleaf.reactive.max-chunk-size=0
# Media types supported by the view technology.
# spring.thymeleaf.reactive.media-types=
# Content-Type的值（默认值：text/html）
spring.thymeleaf.servlet.content-type=text/html
# 在构建URL时添加到视图名称后的后缀（默认值：.html）
spring.thymeleaf.suffix=.html
# Thymeleaf模板解析器在解析器链中的顺序。默认情况下，它排第一位。顺序从1开始，只有在定义了额外的TemplateResolver Bean时才需要设置这个属性。
# spring.thymeleaf.template-resolver-order=
# 可解析的视图名称列表，用逗号分隔
# spring.thymeleaf.view-names=

